name: Tests

# Controls when the workflow will run
on:
  pull_request:
    branches: [ "**" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [' 3.10', '3.11', '3.12']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Install libGLU library on Ubuntu
      run: |
            if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install -y libglu1-mesa
            fi
      shell: bash
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox
  code_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install libGLU library on Ubuntu
        run: sudo apt-get install -y libglu1-mesa
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Generate code coverage report
        run: |
          python -m pip install --upgrade pip
          pip install .'[testing]'
          pytest tests --cov=stem --cov-report=html:coverage_report
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  benchmarks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: ['3.10', '3.11', '3.12' ]
    steps:
      - name: Install libGLU library on Ubuntu
        run: |
              if [ "$RUNNER_OS" == "Linux" ]; then
                  sudo apt-get install -y libglu1-mesa
              fi
        shell: bash
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[testing]
      - name: Run benchmark tests
        run: |
          pytest benchmark_tests

